Q6)SAD : Write a Java Program to implement Factory method for Pizza Store with
createPizza(), orderPizza(),prepare(), bake(), cut(), box(). Use this to
create variety of
pizza’s like NyStyleCheesePizza, ChicagoStyleCheesePizzaetc.

abstract class Pizza {
    String name;
    String dough;
    String sauce;
    String cheese;
    
    void prepare() {
        System.out.println("Preparing " + name);
        System.out.println("Tossing dough... " + dough);
        System.out.println("Adding sauce... " + sauce);
        System.out.println("Adding cheese... " + cheese);
    }
    
    void bake() {
        System.out.println("Baking at 350 degrees for 25 minutes.");
    }
    
    void cut() {
        System.out.println("Cutting the pizza into diagonal slices.");
    }
    
    void box() {
        System.out.println("Boxing the pizza.");
    }
    
    public String getName() {
        return name;
    }
}

class NyStyleCheesePizza extends Pizza {
    public NyStyleCheesePizza() {
        name = "New York Style Cheese Pizza";
        dough = "Thin Crust Dough";
        sauce = "Marinara Sauce";
        cheese = "Reggiano Cheese";
    }
}

class ChicagoStyleCheesePizza extends Pizza {
    public ChicagoStyleCheesePizza() {
        name = "Chicago Style Cheese Pizza";
        dough = "Deep Dish Dough";
        sauce = "Plum Tomato Sauce";
        cheese = "Mozzarella Cheese";
    }
    
    @Override
    void cut() {
        System.out.println("Cutting the pizza into square slices.");
    }
}

abstract class PizzaStore {
    public Pizza orderPizza(String type) {
        Pizza pizza;
        pizza = createPizza(type);
        
        pizza.prepare();
        pizza.bake();
        pizza.cut();
        pizza.box();
        
        return pizza;
    }
    
    protected abstract Pizza createPizza(String type);
}

class NyPizzaStore extends PizzaStore {
    @Override
    protected Pizza createPizza(String type) {
        if (type.equals("cheese")) {
            return new NyStyleCheesePizza();
        } else {
            return null;
        }
    }
}

class ChicagoPizzaStore extends PizzaStore {
    @Override
    protected Pizza createPizza(String type) {
        if (type.equals("cheese")) {
            return new ChicagoStyleCheesePizza();
        } else {
            return null;
        }
    }
}

public class PizzaTestDrive {
    public static void main(String[] args) {
        PizzaStore nyStore = new NyPizzaStore();
        Pizza pizza1 = nyStore.orderPizza("cheese");
        System.out.println("Ordered a " + pizza1.getName() + "\n");

        PizzaStore chicagoStore = new ChicagoPizzaStore();
        Pizza pizza2 = chicagoStore.orderPizza("cheese");
        System.out.println("Ordered a " + pizza2.getName() + "\n");
    }
}

IoT : To write a program to get temperature notification using Arduino

#include <DHT.h>

#define DHTPIN 2
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);

float temperature;
float humidity;
float threshold = 30.0;

void setup() {
  Serial.begin(9600);
  dht.begin();
}

void loop() {
  delay(2000);

  temperature = dht.readTemperature();
  humidity = dht.readHumidity();

  if (isnan(temperature) || isnan(humidity)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.print(" °C ");
  Serial.print("Humidity: ");
  Serial.print(humidity);
  Serial.println(" %");

  if (temperature > threshold) {
    Serial.println("Temperature is above threshold! Sending notification...");
  }

  delay(1000);
}


