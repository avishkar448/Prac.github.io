Q10)SAD : Write a Java Program to implement command pattern to test Remote
Control.

interface Command {
    void execute();
    void undo();
}

class Light {
    public void on() {
        System.out.println("The light is ON");
    }

    public void off() {
        System.out.println("The light is OFF");
    }
}

class LightOnCommand implements Command {
    private Light light;

    public LightOnCommand(Light light) {
        this.light = light;
    }

    public void execute() {
        light.on();
    }

    public void undo() {
        light.off();
    }
}

class LightOffCommand implements Command {
    private Light light;

    public LightOffCommand(Light light) {
        this.light = light;
    }

    public void execute() {
        light.off();
    }

    public void undo() {
        light.on();
    }
}

class RemoteControl {
    private Command command;

    public void setCommand(Command command) {
        this.command = command;
    }

    public void pressButton() {
        command.execute();
    }

    public void pressUndo() {
        command.undo();
    }
}

public class CommandPatternTest {
    public static void main(String[] args) {
        Light livingRoomLight = new Light();
        
        Command lightOn = new LightOnCommand(livingRoomLight);
        Command lightOff = new LightOffCommand(livingRoomLight);
        
        RemoteControl remote = new RemoteControl();

        remote.setCommand(lightOn);
        remote.pressButton(); 
        remote.pressUndo();  

        remote.setCommand(lightOff);
        remote.pressButton(); 
        remote.pressUndo(); 
    }
}

IoT : Programming of Raspberry Pi to detect temperature using temperature sensor

import spidev
import time

spi = spidev.SpiDev()
spi.open(0, 0) 

def read_adc(channel):
    if channel < 0 or channel > 7:
        return -1
    adc = spi.xfer2([1, (8 + channel) << 4, 0])
    data = ((adc[1] & 3) << 8) + adc[2]
    return data

def get_temperature():
    # Read the raw value from the LM35 sensor
    raw_value = read_adc(0)  
    voltage = (raw_value * 3.3) / 1023  
    temperature = voltage * 100  
    return temperature

try:
    while True:
        temperature = get_temperature()
        print(f"Temperature: {temperature:.2f}Â°C")
        time.sleep(1) 

except KeyboardInterrupt:
    print("Program terminated")
    spi.close() 
