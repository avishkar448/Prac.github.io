Q9)SAD : Write a JAVA Program to implement built-in support (java.util.Observable)
Weather Station with members temperature, humidity, pressure and method
mesurmentsChanged(),setMesurment(), getTemperature(), getHumidity(),
getPressure()

import java.util.Observable;
import java.util.Observer;

class WeatherStation extends Observable {
    private float temperature;
    private float humidity;
    private float pressure;

    public WeatherStation() {
        this.temperature = 0.0f;
        this.humidity = 0.0f;
        this.pressure = 0.0f;
    }

    public void measurementsChanged() {
        setChanged();
        notifyObservers();
    }

    public void setMeasurements(float temperature, float humidity, float pressure) {
        this.temperature = temperature;
        this.humidity = humidity;
        this.pressure = pressure;
        measurementsChanged();
    }

    public float getTemperature() {
        return temperature;
    }

    public float getHumidity() {
        return humidity;
    }

    public float getPressure() {
        return pressure;
    }
}

class WeatherDisplay implements Observer {
    private float temperature;
    private float humidity;
    private float pressure;

    public WeatherDisplay(WeatherStation weatherStation) {
        weatherStation.addObserver(this);
    }

    @Override
    public void update(Observable o, Object arg) {
        if (o instanceof WeatherStation) {
            WeatherStation weatherStation = (WeatherStation) o;
            this.temperature = weatherStation.getTemperature();
            this.humidity = weatherStation.getHumidity();
            this.pressure = weatherStation.getPressure();
            display();
        }
    }

    public void display() {
        System.out.println("Current Weather:");
        System.out.println("Temperature: " + temperature + "°C");
        System.out.println("Humidity: " + humidity + "%");
        System.out.println("Pressure: " + pressure + "hPa");
    }
}

public class WeatherStationApp {
    public static void main(String[] args) {
        WeatherStation weatherStation = new WeatherStation();
        WeatherDisplay weatherDisplay = new WeatherDisplay(weatherStation);

        weatherStation.setMeasurements(25.3f, 65.5f, 1013.1f);
        weatherStation.setMeasurements(26.1f, 70.2f, 1012.8f);
        weatherStation.setMeasurements(27.8f, 72.5f, 1011.9f);
    }
}

IoT : To write a program to get temperature notification using Arduino

const int temperaturePin = A0; 
const int ledPin = 13;
float temperature;
float threshold = 30.0; 

void setup() {
  pinMode(ledPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  int sensorValue = analogRead(temperaturePin);
  temperature = (sensorValue * 5.0 * 100.0) / 1024.0;  
  
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serial.println(" °C");
  
  if (temperature > threshold) {
    digitalWrite(ledPin, HIGH);  
    Serial.println("Temperature is above threshold! LED ON.");
  } else {
    digitalWrite(ledPin, LOW);   
    Serial.println("Temperature is below threshold. LED OFF.");
  }
  
  delay(1000); 
}
